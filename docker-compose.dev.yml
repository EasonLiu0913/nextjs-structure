# Docker Compose 配置 - 開發環境

version: '3.8'

services:
  # Next.js 開發服務器
  nextjs-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nextjs-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_NAME=Next.js Enterprise App (Dev)
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-key
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - dev-network
    restart: unless-stopped
    depends_on:
      - redis-dev
      - postgres-dev

  # Redis 開發環境
  redis-dev:
    image: redis:7-alpine
    container_name: nextjs-redis-dev
    ports:
      - "6379:6379"
    networks:
      - dev-network
    restart: unless-stopped

  # PostgreSQL 開發環境
  postgres-dev:
    image: postgres:15-alpine
    container_name: nextjs-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nextjs_app_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - dev-network
    restart: unless-stopped

  # Mailhog (開發環境郵件測試)
  mailhog:
    image: mailhog/mailhog
    container_name: nextjs-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - dev-network
    restart: unless-stopped

volumes:
  postgres-dev-data:
    driver: local

networks:
  dev-network:
    driver: bridge