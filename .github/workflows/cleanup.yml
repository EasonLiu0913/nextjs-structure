name: Cleanup

on:
  schedule:
    # 每週日晚上 11:00 UTC 執行清理
    - cron: '0 23 * * 0'
  workflow_dispatch:

jobs:
  cleanup-artifacts:
    name: Cleanup Artifacts
    runs-on: ubuntu-latest
    
    steps:
    - name: Delete old artifacts
      uses: actions/github-script@v6
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // 獲取所有 artifacts
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner,
            repo,
            per_page: 100
          });
          
          // 刪除超過 7 天的 artifacts
          const sevenDaysAgo = new Date();
          sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
          
          let deletedCount = 0;
          
          for (const artifact of artifacts.data.artifacts) {
            const createdAt = new Date(artifact.created_at);
            
            if (createdAt < sevenDaysAgo) {
              try {
                await github.rest.actions.deleteArtifact({
                  owner,
                  repo,
                  artifact_id: artifact.id
                });
                console.log(`Deleted artifact: ${artifact.name} (${artifact.id})`);
                deletedCount++;
              } catch (error) {
                console.log(`Failed to delete artifact ${artifact.name}: ${error.message}`);
              }
            }
          }
          
          console.log(`Deleted ${deletedCount} old artifacts`);
          return deletedCount;

  cleanup-workflow-runs:
    name: Cleanup Workflow Runs
    runs-on: ubuntu-latest
    
    steps:
    - name: Delete old workflow runs
      uses: actions/github-script@v6
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // 獲取所有工作流程
          const workflows = await github.rest.actions.listRepoWorkflows({
            owner,
            repo
          });
          
          let totalDeleted = 0;
          
          for (const workflow of workflows.data.workflows) {
            // 獲取工作流程執行記錄
            const runs = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: workflow.id,
              per_page: 100
            });
            
            // 保留最新的 10 個成功執行和所有失敗的執行
            const successfulRuns = runs.data.workflow_runs
              .filter(run => run.conclusion === 'success')
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            
            const runsToDelete = successfulRuns.slice(10); // 保留最新的 10 個
            
            for (const run of runsToDelete) {
              try {
                await github.rest.actions.deleteWorkflowRun({
                  owner,
                  repo,
                  run_id: run.id
                });
                console.log(`Deleted workflow run: ${workflow.name} - ${run.id}`);
                totalDeleted++;
              } catch (error) {
                console.log(`Failed to delete run ${run.id}: ${error.message}`);
              }
            }
          }
          
          console.log(`Deleted ${totalDeleted} old workflow runs`);
          return totalDeleted;

  cleanup-cache:
    name: Cleanup Cache
    runs-on: ubuntu-latest
    
    steps:
    - name: Cleanup old caches
      uses: actions/github-script@v6
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          try {
            // 獲取所有快取
            const caches = await github.rest.actions.getActionsCacheList({
              owner,
              repo,
              per_page: 100
            });
            
            // 刪除超過 7 天的快取
            const sevenDaysAgo = new Date();
            sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
            
            let deletedCount = 0;
            
            for (const cache of caches.data.actions_caches) {
              const createdAt = new Date(cache.created_at);
              
              if (createdAt < sevenDaysAgo) {
                try {
                  await github.rest.actions.deleteActionsCacheById({
                    owner,
                    repo,
                    cache_id: cache.id
                  });
                  console.log(`Deleted cache: ${cache.key} (${cache.id})`);
                  deletedCount++;
                } catch (error) {
                  console.log(`Failed to delete cache ${cache.key}: ${error.message}`);
                }
              }
            }
            
            console.log(`Deleted ${deletedCount} old caches`);
            return deletedCount;
          } catch (error) {
            console.log(`Cache cleanup failed: ${error.message}`);
            return 0;
          }

  cleanup-branches:
    name: Cleanup Merged Branches
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Delete merged branches
      run: |
        echo "Fetching all branches..."
        git fetch --all --prune
        
        # 獲取已合併到 main 的分支
        merged_branches=$(git branch -r --merged origin/main | grep -v 'origin/main' | grep -v 'origin/develop' | grep -v 'origin/HEAD' | sed 's/origin\///' | xargs)
        
        if [ -z "$merged_branches" ]; then
          echo "No merged branches to delete"
          exit 0
        fi
        
        echo "Found merged branches: $merged_branches"
        
        # 刪除遠端分支
        for branch in $merged_branches; do
          # 跳過保護分支
          if [[ "$branch" == "main" || "$branch" == "develop" || "$branch" == "staging" || "$branch" == "production" ]]; then
            echo "Skipping protected branch: $branch"
            continue
          fi
          
          # 跳過最近的分支 (7天內)
          last_commit_date=$(git log -1 --format=%ct origin/$branch 2>/dev/null || echo 0)
          current_date=$(date +%s)
          days_old=$(( (current_date - last_commit_date) / 86400 ))
          
          if [ $days_old -lt 7 ]; then
            echo "Skipping recent branch: $branch (${days_old} days old)"
            continue
          fi
          
          echo "Deleting merged branch: $branch"
          git push origin --delete $branch || echo "Failed to delete $branch"
        done

  notify-cleanup:
    name: Notify Cleanup Results
    runs-on: ubuntu-latest
    needs: [cleanup-artifacts, cleanup-workflow-runs, cleanup-cache, cleanup-branches]
    if: always()
    
    steps:
    - name: Notify cleanup completion
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: |
          🧹 Weekly cleanup completed
          
          📊 Cleanup Results:
          - Artifacts: ${{ needs.cleanup-artifacts.result }}
          - Workflow Runs: ${{ needs.cleanup-workflow-runs.result }}
          - Cache: ${{ needs.cleanup-cache.result }}
          - Branches: ${{ needs.cleanup-branches.result }}
          
          💾 Storage space has been optimized
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}