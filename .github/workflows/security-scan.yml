name: Security Scan

on:
  schedule:
    # ÊØèÂ§©Êó©‰∏ä 6:00 UTC Âü∑Ë°å
    - cron: '0 6 * * *'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run npm audit
      run: |
        echo "Running npm audit..."
        npm audit --audit-level=moderate --json > audit-report.json || true
        
        # Ê™¢Êü•ÊòØÂê¶ÊúâÈ´òÂç±ÊºèÊ¥û
        high_vulns=$(cat audit-report.json | jq '.metadata.vulnerabilities.high // 0')
        critical_vulns=$(cat audit-report.json | jq '.metadata.vulnerabilities.critical // 0')
        
        echo "High vulnerabilities: $high_vulns"
        echo "Critical vulnerabilities: $critical_vulns"
        
        if [ "$critical_vulns" -gt 0 ]; then
          echo "‚ùå Critical vulnerabilities found!"
          exit 1
        elif [ "$high_vulns" -gt 0 ]; then
          echo "‚ö†Ô∏è High vulnerabilities found!"
          echo "high_vulns_found=true" >> $GITHUB_OUTPUT
        else
          echo "‚úÖ No critical or high vulnerabilities found"
          echo "high_vulns_found=false" >> $GITHUB_OUTPUT
        fi
      id: npm_audit
    
    - name: Upload audit report
      uses: actions/upload-artifact@v4
      with:
        name: npm-audit-report
        path: audit-report.json
        retention-days: 30

  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --json > snyk-report.json
      continue-on-error: true
    
    - name: Upload Snyk report
      uses: actions/upload-artifact@v4
      with:
        name: snyk-report
        path: snyk-report.json
        retention-days: 30

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run TruffleHog (Full Scan)
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        extra_args: --debug --only-verified --fail
    
    - name: Run TruffleHog (Diff Scan)
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.before }}
        head: ${{ github.sha }}
        extra_args: --debug --only-verified
      continue-on-error: true

  license-check:
    name: License Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install license checker
      run: npm install -g license-checker
    
    - name: Check licenses
      run: |
        echo "Checking licenses..."
        license-checker --json > licenses.json || echo "License checker completed with warnings"
        
        # Ê™¢Êü•ÊòØÂê¶ÊúâÁ¶ÅÁî®ÁöÑÊéàÊ¨ä (‰∏çÂåÖÊã¨ LGPL)
        forbidden_licenses=("\"GPL-2.0\"" "\"GPL-3.0\"" "\"AGPL-1.0\"" "\"AGPL-3.0\"")
        
        for license in "${forbidden_licenses[@]}"; do
          if grep -q "$license" licenses.json 2>/dev/null; then
            echo "‚ùå Forbidden license found: $license"
            echo "Found packages with forbidden license:"
            cat licenses.json | jq -r --arg license "$license" 'to_entries[] | select(.value.licenses | tostring | contains($license)) | "\(.key): \(.value.licenses)"'
            exit 1
          fi
        done
        
        echo "‚úÖ No forbidden licenses found"
    
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: licenses.json
        retention-days: 30

  notify-security-results:
    name: Notify Security Results
    runs-on: ubuntu-latest
    needs: [security-audit, snyk-scan, codeql-analysis, secret-scan, license-check]
    if: always()
    
    steps:
    - name: Notify on security issues
      if: ${{ needs.security-audit.result == 'failure' || needs.snyk-scan.result == 'failure' || needs.secret-scan.result == 'failure' }}
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: |
          üö® Security scan detected issues!
          
          üìä Results:
          - NPM Audit: ${{ needs.security-audit.result }}
          - Snyk Scan: ${{ needs.snyk-scan.result }}
          - Secret Scan: ${{ needs.secret-scan.result }}
          - License Check: ${{ needs.license-check.result }}
          
          üîç Please review the security reports immediately.
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    - name: Notify on success
      if: ${{ needs.security-audit.result == 'success' && needs.snyk-scan.result == 'success' && needs.secret-scan.result == 'success' && needs.license-check.result == 'success' }}
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: |
          ‚úÖ Daily security scan completed successfully
          
          üìä All security checks passed:
          - NPM Audit: No critical vulnerabilities
          - Snyk Scan: No high-severity issues
          - Secret Scan: No secrets detected
          - License Check: All licenses compliant
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}